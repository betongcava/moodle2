{"version":3,"file":"videojs-ogvjs-lazy.min.js","sources":["../src/videojs-ogvjs-lazy.js"],"sourcesContent":["/**\n * videojs-ogvjs\n * @version 0.2.1\n * @copyright 2023 Huong Nguyen <huongnv13@gmail.com>\n * @license MIT\n */\n/*! @name videojs-ogvjs @version 0.2.1 @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('video.js'), require('OGVCompat'), require('OGVLoader'), require('OGVPlayer')) :\n\t\ttypeof define === 'function' && define.amd ? define(['media_videojs/video-lazy', './local/ogv/ogv'], factory) :\n\t\t\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojsOgvjs = factory(global.videojs, global.OGVCompat, global.OGVLoader, global.OGVPlayer));\n}(this, (function (videojs, ogvBase) { 'use strict';\n\n\tfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n\tvar videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);\n\tvar OGVCompat__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVCompat);\n\tvar OGVLoader__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVLoader);\n\tvar OGVPlayer__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVPlayer);\n\n\tfunction createCommonjsModule(fn, basedir, module) {\n\t\treturn module = {\n\t\t\tpath: basedir,\n\t\t\texports: {},\n\t\t\trequire: function (path, base) {\n\t\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t\t}\n\t\t}, fn(module, module.exports), module.exports;\n\t}\n\n\tfunction commonjsRequire () {\n\t\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n\t}\n\n\tvar setPrototypeOf = createCommonjsModule(function (module) {\n\t\tfunction _setPrototypeOf(o, p) {\n\t\t\tmodule.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n\t\t\t\to.__proto__ = p;\n\t\t\t\treturn o;\n\t\t\t}, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t\t\treturn _setPrototypeOf(o, p);\n\t\t}\n\n\t\tmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t});\n\n\tvar inheritsLoose = createCommonjsModule(function (module) {\n\t\tfunction _inheritsLoose(subClass, superClass) {\n\t\t\tsubClass.prototype = Object.create(superClass.prototype);\n\t\t\tsubClass.prototype.constructor = subClass;\n\t\t\tsetPrototypeOf(subClass, superClass);\n\t\t}\n\n\t\tmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t});\n\n\tvar Tech = videojs__default['default'].getComponent('Tech');\n\tvar androidOS = 'Android';\n\tvar iPhoneOS = 'iPhoneOS';\n\tvar iPadOS = 'iPadOS';\n\tvar otherOS = 'Other';\n\t/**\n\t * Object.defineProperty but \"lazy\", which means that the value is only set after\n\t * it retrieved the first time, rather than being set right away.\n\t *\n\t * @param {Object} obj the object to set the property on.\n\t * @param {string} key the key for the property to set.\n\t * @param {Function} getValue the function used to get the value when it is needed.\n\t * @param {boolean} setter whether a setter should be allowed or not.\n\t */\n\n\tvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n\t\tif (setter === void 0) {\n\t\t\tsetter = true;\n\t\t}\n\n\t\tvar set = function set(value) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\tvalue: value,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t};\n\n\t\tvar options = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\tvar value = getValue();\n\t\t\t\tset(value);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\tif (setter) {\n\t\t\toptions.set = set;\n\t\t}\n\n\t\treturn Object.defineProperty(obj, key, options);\n\t};\n\t/**\n\t * Get the device's OS.\n\t *\n\t * @return {string} Device's OS.\n\t */\n\n\n\tvar getDeviceOS = function getDeviceOS() {\n\t\t/* global navigator */\n\t\tvar ua = navigator.userAgent;\n\n\t\tif (/android/i.test(ua)) {\n\t\t\treturn androidOS;\n\t\t} else if (/iPad|iPhone|iPod/.test(ua)) {\n\t\t\treturn iPhoneOS;\n\t\t} else if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) {\n\t\t\treturn iPadOS;\n\t\t}\n\n\t\treturn otherOS;\n\t};\n\t/**\n\t * OgvJS Media Controller - Wrapper for ogv.js Media API\n\t *\n\t * @mixes Tech~SourceHandlerAdditions\n\t * @extends Tech\n\t */\n\n\n\tvar OgvJS = /*#__PURE__*/function (_Tech) {\n\t\tinheritsLoose(OgvJS, _Tech);\n\n\t\t/**\n\t\t * Create an instance of this Tech.\n\t\t *\n\t\t * @param {Object} [options] The key/value store of player options.\n\t\t * @param {Component~ReadyCallback} ready Callback function to call when the `OgvJS` Tech is ready.\n\t\t */\n\t\tfunction OgvJS(options, ready) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Tech.call(this, options, ready) || this;\n\t\t\t_this.el_.src = options.source.src;\n\t\t\tOgvJS.setIfAvailable(_this.el_, 'autoplay', options.autoplay);\n\t\t\tOgvJS.setIfAvailable(_this.el_, 'loop', options.loop);\n\t\t\tOgvJS.setIfAvailable(_this.el_, 'poster', options.poster);\n\t\t\tOgvJS.setIfAvailable(_this.el_, 'preload', options.preload);\n\n\t\t\t_this.on('loadedmetadata', function () {\n\t\t\t\tif (getDeviceOS() === iPhoneOS) {\n\t\t\t\t\t// iPhoneOS add some inline styles to the canvas, we need to remove it.\n\t\t\t\t\tvar canvas = _this.el_.getElementsByTagName('canvas')[0];\n\n\t\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\t\tcanvas.style.removeProperty('margin');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_this.triggerReady();\n\n\t\t\treturn _this;\n\t\t}\n\t\t/**\n\t\t * Create the 'OgvJS' Tech's DOM element.\n\t\t *\n\t\t * @return {Element} The element that gets created.\n\t\t */\n\n\n\t\tvar _proto = OgvJS.prototype;\n\n\t\t_proto.createEl = function createEl() {\n\t\t\tvar options = this.options_;\n\n\t\t\tif (options.base) {\n\t\t\t\tOGVLoader__default['default'].base = options.base;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Please specify the base for the ogv.js library');\n\t\t\t}\n\n\t\t\tvar el = new OGVPlayer__default['default'](options);\n\t\t\tel.className += ' vjs-tech';\n\t\t\toptions.tag = el;\n\t\t\treturn el;\n\t\t}\n\t\t/**\n\t\t * Start playback\n\t\t *\n\t\t * @method play\n\t\t */\n\t\t;\n\n\t\t_proto.play = function play() {\n\t\t\tthis.el_.play();\n\t\t}\n\t\t/**\n\t\t * Get the current playback speed.\n\t\t *\n\t\t * @return {number}\n\t\t * @method playbackRate\n\t\t */\n\t\t;\n\n\t\t_proto.playbackRate = function playbackRate() {\n\t\t\treturn this.el_.playbackRate || 1;\n\t\t}\n\t\t/**\n\t\t * Set the playback speed.\n\t\t *\n\t\t * @param {number} val Speed for the player to play.\n\t\t * @method setPlaybackRate\n\t\t */\n\t\t;\n\n\t\t_proto.setPlaybackRate = function setPlaybackRate(val) {\n\t\t\tif (this.el_.hasOwnProperty('playbackRate')) {\n\t\t\t\tthis.el_.playbackRate = val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Returns a TimeRanges object that represents the ranges of the media resource that the user agent has played.\n\t\t *\n\t\t * @return {TimeRangeObject} the range of points on the media timeline that has been reached through normal playback\n\t\t */\n\t\t;\n\n\t\t_proto.played = function played() {\n\t\t\treturn this.el_.played;\n\t\t}\n\t\t/**\n\t\t * Pause playback\n\t\t *\n\t\t * @method pause\n\t\t */\n\t\t;\n\n\t\t_proto.pause = function pause() {\n\t\t\tthis.el_.pause();\n\t\t}\n\t\t/**\n\t\t * Is the player paused or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method paused\n\t\t */\n\t\t;\n\n\t\t_proto.paused = function paused() {\n\t\t\treturn this.el_.paused;\n\t\t}\n\t\t/**\n\t\t * Get current playing time.\n\t\t *\n\t\t * @return {number}\n\t\t * @method currentTime\n\t\t */\n\t\t;\n\n\t\t_proto.currentTime = function currentTime() {\n\t\t\treturn this.el_.currentTime;\n\t\t}\n\t\t/**\n\t\t * Set current playing time.\n\t\t *\n\t\t * @param {number} seconds Current time of audio/video.\n\t\t * @method setCurrentTime\n\t\t */\n\t\t;\n\n\t\t_proto.setCurrentTime = function setCurrentTime(seconds) {\n\t\t\ttry {\n\t\t\t\tthis.el_.currentTime = seconds;\n\t\t\t} catch (e) {\n\t\t\t\tvideojs__default['default'].log(e, 'Media is not ready. (Video.JS)');\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Get media's duration.\n\t\t *\n\t\t * @return {number}\n\t\t * @method duration\n\t\t */\n\t\t;\n\n\t\t_proto.duration = function duration() {\n\t\t\tif (this.el_.duration && this.el_.duration !== Infinity) {\n\t\t\t\treturn this.el_.duration;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\t/**\n\t\t * Get a TimeRange object that represents the intersection\n\t\t * of the time ranges for which the user agent has all\n\t\t * relevant media.\n\t\t *\n\t\t * @return {TimeRangeObject}\n\t\t * @method buffered\n\t\t */\n\t\t;\n\n\t\t_proto.buffered = function buffered() {\n\t\t\treturn this.el_.buffered;\n\t\t}\n\t\t/**\n\t\t * Get current volume level.\n\t\t *\n\t\t * @return {number}\n\t\t * @method volume\n\t\t */\n\t\t;\n\n\t\t_proto.volume = function volume() {\n\t\t\treturn this.el_.hasOwnProperty('volume') ? this.el_.volume : 1;\n\t\t}\n\t\t/**\n\t\t * Set current playing volume level.\n\t\t *\n\t\t * @param {number} percentAsDecimal Volume percent as a decimal.\n\t\t * @method setVolume\n\t\t */\n\t\t;\n\n\t\t_proto.setVolume = function setVolume(percentAsDecimal) {\n\t\t\t// Apple does not allow iOS and iPadOS devices to set the volume on UI.\n\t\t\tif (getDeviceOS() !== iPhoneOS && getDeviceOS() !== iPadOS && this.el_.hasOwnProperty('volume')) {\n\t\t\t\tthis.el_.volume = percentAsDecimal;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Is the player muted or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method muted\n\t\t */\n\t\t;\n\n\t\t_proto.muted = function muted() {\n\t\t\treturn this.el_.muted;\n\t\t}\n\t\t/**\n\t\t * Mute the player.\n\t\t *\n\t\t * @param {boolean} muted True to mute the player.\n\t\t */\n\t\t;\n\n\t\t_proto.setMuted = function setMuted(muted) {\n\t\t\tthis.el_.muted = !!muted;\n\t\t}\n\t\t/**\n\t\t * Is the player muted by default or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method defaultMuted\n\t\t */\n\t\t;\n\n\t\t_proto.defaultMuted = function defaultMuted() {\n\t\t\treturn this.el_.defaultMuted || false;\n\t\t}\n\t\t/**\n\t\t * Get the player width.\n\t\t *\n\t\t * @return {number}\n\t\t * @method width\n\t\t */\n\t\t;\n\n\t\t_proto.width = function width() {\n\t\t\treturn this.el_.offsetWidth;\n\t\t}\n\t\t/**\n\t\t * Get the player height.\n\t\t *\n\t\t * @return {number}\n\t\t * @method height\n\t\t */\n\t\t;\n\n\t\t_proto.height = function height() {\n\t\t\treturn this.el_.offsetHeight;\n\t\t}\n\t\t/**\n\t\t * Get the video width.\n\t\t *\n\t\t * @return {number}\n\t\t * @method videoWidth\n\t\t */\n\t\t;\n\n\t\t_proto.videoWidth = function videoWidth() {\n\t\t\treturn this.el_.videoWidth;\n\t\t}\n\t\t/**\n\t\t * Get the video height.\n\t\t *\n\t\t * @return {number}\n\t\t * @method videoHeight\n\t\t */\n\t\t;\n\n\t\t_proto.videoHeight = function videoHeight() {\n\t\t\treturn this.el_.videoHeight;\n\t\t}\n\t\t/**\n\t\t * Get/set media source.\n\t\t *\n\t\t * @param {Object=} src Source object\n\t\t * @return {Object}\n\t\t * @method src\n\t\t */\n\t\t;\n\n\t\t_proto.src = function src(_src) {\n\t\t\tif (typeof _src === 'undefined') {\n\t\t\t\treturn this.el_.src;\n\t\t\t}\n\n\t\t\tthis.el_.src = _src;\n\t\t}\n\t\t/**\n\t\t * Load the media into the player.\n\t\t *\n\t\t * @method load\n\t\t */\n\t\t;\n\n\t\t_proto.load = function load() {\n\t\t\tthis.el_.load();\n\t\t}\n\t\t/**\n\t\t * Get current media source.\n\t\t *\n\t\t * @return {Object}\n\t\t * @method currentSrc\n\t\t */\n\t\t;\n\n\t\t_proto.currentSrc = function currentSrc() {\n\t\t\tif (this.currentSource_) {\n\t\t\t\treturn this.currentSource_.src;\n\t\t\t}\n\n\t\t\treturn this.el_.currentSrc;\n\t\t}\n\t\t/**\n\t\t * Get media poster URL.\n\t\t *\n\t\t * @return {string}\n\t\t * @method poster\n\t\t */\n\t\t;\n\n\t\t_proto.poster = function poster() {\n\t\t\treturn this.el_.poster;\n\t\t}\n\t\t/**\n\t\t * Set media poster URL.\n\t\t *\n\t\t * @param {string} url the poster image's url.\n\t\t * @method\n\t\t */\n\t\t;\n\n\t\t_proto.setPoster = function setPoster(url) {\n\t\t\tthis.el_.poster = url;\n\t\t}\n\t\t/**\n\t\t * Is the media preloaded or not.\n\t\t *\n\t\t * @return {string}\n\t\t * @method preload\n\t\t */\n\t\t;\n\n\t\t_proto.preload = function preload() {\n\t\t\treturn this.el_.preload || 'none';\n\t\t}\n\t\t/**\n\t\t * Set the media preload method.\n\t\t *\n\t\t * @param {string} val Value for preload attribute.\n\t\t * @method setPreload\n\t\t */\n\t\t;\n\n\t\t_proto.setPreload = function setPreload(val) {\n\t\t\tif (this.el_.hasOwnProperty('preload')) {\n\t\t\t\tthis.el_.preload = val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Is the media auto-played or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method autoplay\n\t\t */\n\t\t;\n\n\t\t_proto.autoplay = function autoplay() {\n\t\t\treturn this.el_.autoplay || false;\n\t\t}\n\t\t/**\n\t\t * Set media autoplay method.\n\t\t *\n\t\t * @param {boolean} val Value for autoplay attribute.\n\t\t * @method setAutoplay\n\t\t */\n\t\t;\n\n\t\t_proto.setAutoplay = function setAutoplay(val) {\n\t\t\tif (this.el_.hasOwnProperty('autoplay')) {\n\t\t\t\tthis.el_.autoplay = !!val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Does the media has controls or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method controls\n\t\t */\n\t\t;\n\n\t\t_proto.controls = function controls() {\n\t\t\treturn this.el_.controls || false;\n\t\t}\n\t\t/**\n\t\t * Set the media controls method.\n\t\t *\n\t\t * @param {boolean} val Value for controls attribute.\n\t\t * @method setControls\n\t\t */\n\t\t;\n\n\t\t_proto.setControls = function setControls(val) {\n\t\t\tif (this.el_.hasOwnProperty('controls')) {\n\t\t\t\tthis.el_.controls = !!val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Is the media looped or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method loop\n\t\t */\n\t\t;\n\n\t\t_proto.loop = function loop() {\n\t\t\treturn this.el_.loop || false;\n\t\t}\n\t\t/**\n\t\t * Set the media loop method.\n\t\t *\n\t\t * @param {boolean} val Value for loop attribute.\n\t\t * @method setLoop\n\t\t */\n\t\t;\n\n\t\t_proto.setLoop = function setLoop(val) {\n\t\t\tif (this.el_.hasOwnProperty('loop')) {\n\t\t\t\tthis.el_.loop = !!val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Get a TimeRanges object that represents the\n\t\t * ranges of the media resource to which it is possible\n\t\t * for the user agent to seek.\n\t\t *\n\t\t * @return {TimeRangeObject}\n\t\t * @method seekable\n\t\t */\n\t\t;\n\n\t\t_proto.seekable = function seekable() {\n\t\t\treturn this.el_.seekable;\n\t\t}\n\t\t/**\n\t\t * Is player in the \"seeking\" state or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method seeking\n\t\t */\n\t\t;\n\n\t\t_proto.seeking = function seeking() {\n\t\t\treturn this.el_.seeking;\n\t\t}\n\t\t/**\n\t\t * Is the media ended or not.\n\t\t *\n\t\t * @return {boolean}\n\t\t * @method ended\n\t\t */\n\t\t;\n\n\t\t_proto.ended = function ended() {\n\t\t\treturn this.el_.ended;\n\t\t}\n\t\t/**\n\t\t * Get the current state of network activity\n\t\t * NETWORK_EMPTY (numeric value 0)\n\t\t * NETWORK_IDLE (numeric value 1)\n\t\t * NETWORK_LOADING (numeric value 2)\n\t\t * NETWORK_NO_SOURCE (numeric value 3)\n\t\t *\n\t\t * @return {number}\n\t\t * @method networkState\n\t\t */\n\t\t;\n\n\t\t_proto.networkState = function networkState() {\n\t\t\treturn this.el_.networkState;\n\t\t}\n\t\t/**\n\t\t * Get the current state of the player.\n\t\t * HAVE_NOTHING (numeric value 0)\n\t\t * HAVE_METADATA (numeric value 1)\n\t\t * HAVE_CURRENT_DATA (numeric value 2)\n\t\t * HAVE_FUTURE_DATA (numeric value 3)\n\t\t * HAVE_ENOUGH_DATA (numeric value 4)\n\t\t *\n\t\t * @return {number}\n\t\t * @method readyState\n\t\t */\n\t\t;\n\n\t\t_proto.readyState = function readyState() {\n\t\t\treturn this.el_.readyState;\n\t\t}\n\t\t/**\n\t\t * Does the player support native fullscreen mode or not. (Mobile devices)\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\t;\n\n\t\t_proto.supportsFullScreen = function supportsFullScreen() {\n\t\t\t// iOS devices have some problem with HTML5 fullscreen api so we need to fallback to fullWindow mode.\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Get media player error.\n\t\t *\n\t\t * @return {string}\n\t\t * @method error\n\t\t */\n\t\t;\n\n\t\t_proto.error = function error() {\n\t\t\treturn this.el_.error;\n\t\t};\n\n\t\treturn OgvJS;\n\t}(Tech);\n\t/**\n\t * List of available events of the media player.\n\t *\n\t * @private\n\t * @type {Array}\n\t */\n\n\n\tOgvJS.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\t/**\n\t * Set the value for the player is it has that property.\n\t *\n\t * @param {Element} el\n\t * @param {string} name\n\t * @param value\n\t */\n\n\tOgvJS.setIfAvailable = function (el, name, value) {\n\t\tif (el.hasOwnProperty(name)) {\n\t\t\tel[name] = value;\n\t\t}\n\t};\n\t/**\n\t * Check if browser/device is supported by Ogv.JS.\n\t *\n\t * @return {boolean}\n\t */\n\n\n\tOgvJS.isSupported = function () {\n\t\treturn OGVCompat__default['default'].supported('OGVPlayer');\n\t};\n\t/**\n\t * Check if the tech can support the given type.\n\t *\n\t * @param {string} type The mimetype to check\n\t * @return {string} 'probably', 'maybe', or '' (empty string)\n\t */\n\n\n\tOgvJS.canPlayType = function (type) {\n\t\treturn type.indexOf('/ogg') !== -1 || type.indexOf('/webm') ? 'maybe' : '';\n\t};\n\t/**\n\t * Check if the tech can support the given source\n\t *\n\t * @param srcObj The source object\n\t * @return {string} The options passed to the tech\n\t */\n\n\n\tOgvJS.canPlaySource = function (srcObj) {\n\t\treturn OgvJS.canPlayType(srcObj.type);\n\t};\n\t/**\n\t * Check if the volume can be changed in this browser/device.\n\t * Volume cannot be changed in a lot of mobile devices.\n\t * Specifically, it can't be changed on iOS and iPadOS.\n\t *\n\t * @return {boolean} True if volume can be controlled.\n\t */\n\n\n\tOgvJS.canControlVolume = function () {\n\t\tif (getDeviceOS() === iPhoneOS || getDeviceOS() === iPadOS) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = new OGVPlayer__default['default']();\n\t\treturn p.hasOwnProperty('volume');\n\t};\n\t/**\n\t * Check if the volume can be muted in this browser/device.\n\t *\n\t * @return {boolean} True if volume can be muted.\n\t */\n\n\n\tOgvJS.canMuteVolume = function () {\n\t\treturn true;\n\t};\n\t/**\n\t * Check if the playback rate can be changed in this browser/device.\n\t *\n\t * @return {boolean} True if playback rate can be controlled.\n\t */\n\n\n\tOgvJS.canControlPlaybackRate = function () {\n\t\treturn true;\n\t};\n\t/**\n\t * Check to see if native 'TextTracks' are supported by this browser/device.\n\t *\n\t * @return {boolean} True if native 'TextTracks' are supported.\n\t */\n\n\n\tOgvJS.supportsNativeTextTracks = function () {\n\t\treturn false;\n\t};\n\t/**\n\t * Check if the fullscreen resize is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the fullscreen resize is supported.\n\t */\n\n\n\tOgvJS.supportsFullscreenResize = function () {\n\t\treturn true;\n\t};\n\t/**\n\t * Check if the progress events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the progress events is supported.\n\t */\n\n\n\tOgvJS.supportsProgressEvents = function () {\n\t\treturn true;\n\t};\n\t/**\n\t * Check if the time update events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the time update events is supported.\n\t */\n\n\n\tOgvJS.supportsTimeupdateEvents = function () {\n\t\treturn true;\n\t};\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports muting volume.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canMuteVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports changing the speed at which the media plays.\n\t * Examples:\n\t *   - Set player to play 2x (twice) as fast.\n\t *   - Set player to play 0.5x (half) as fast.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlPlaybackRate}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports native 'TextTracks'.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsNativeTextTracks}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports fullscreen resize.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsFullscreenResize}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports progress events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsProgressEvents}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports time update events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsTimeupdateEvents}\n\t */\n\n\n\t[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresFullscreenResize', 'supportsFullscreenResize'], ['featuresProgressEvents', 'supportsProgressEvents'], ['featuresTimeupdateEvents', 'supportsTimeupdateEvents']].forEach(function (_ref) {\n\t\tvar key = _ref[0],\n\t\t\tfn = _ref[1];\n\t\tdefineLazyProperty(OgvJS.prototype, key, function () {\n\t\t\treturn OgvJS[fn]();\n\t\t}, true);\n\t});\n\tTech.registerTech('OgvJS', OgvJS);\n\n\treturn OgvJS;\n\n})));\n"],"names":["global","factory","this","videojs","ogvBase","_interopDefaultLegacy","e","videojs__default","OGVCompat__default","OGVCompat","OGVLoader__default","OGVLoader","OGVPlayer__default","OGVPlayer","createCommonjsModule","fn","basedir","module","path","exports","require","base","Error","commonjsRequire","setPrototypeOf","_setPrototypeOf","o","p","Object","bind","__proto__","__esModule","inheritsLoose","subClass","superClass","prototype","create","constructor","Tech","getComponent","getDeviceOS","ua","navigator","userAgent","test","platform","maxTouchPoints","OgvJS","_Tech","options","ready","_this","call","el_","src","source","setIfAvailable","autoplay","loop","poster","preload","on","canvas","getElementsByTagName","style","removeProperty","triggerReady","_proto","createEl","options_","el","className","tag","play","playbackRate","setPlaybackRate","val","hasOwnProperty","played","pause","paused","currentTime","setCurrentTime","seconds","log","duration","Infinity","buffered","volume","setVolume","percentAsDecimal","muted","setMuted","defaultMuted","width","offsetWidth","height","offsetHeight","videoWidth","videoHeight","_src","load","currentSrc","currentSource_","setPoster","url","setPreload","setAutoplay","controls","setControls","setLoop","seekable","seeking","ended","networkState","readyState","supportsFullScreen","error","Events","name","value","isSupported","supported","canPlayType","type","indexOf","canPlaySource","srcObj","canControlVolume","canMuteVolume","canControlPlaybackRate","supportsNativeTextTracks","supportsFullscreenResize","supportsProgressEvents","supportsTimeupdateEvents","forEach","_ref","key","obj","getValue","setter","set","defineProperty","enumerable","writable","configurable","get","defineLazyProperty","registerTech","define","amd","globalThis","self","videojsOgvjs"],"mappings":"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"}